server:
  port: 8090
  error:
    whitelabel:
      enabled: false

spring:
  application:
    name: skill-tracker-search

  data:
    mongodb:
      uri: mongodb://mongodbapi:pUF0Sr2kqauk05LZaMWuSqaOUyLFr3ysB2hAETw1ehWSnrVEDT2Qg4foHO3MiuaP9SfcBaOu5wh0ACDb69i3lg==@mongodbapi.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@mongodbapi@
      database: FSE4
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false

#  jms:
#    servicebus:
#      connection-string: Endpoint=sb://skill-tracker-service-bus.servicebus.windows.net/;SharedAccessKeyName=queue-policy;SharedAccessKey=qGTrNdBJeXrW08C27eninGOb2Hjq4pp9M+ASbDG6VVs=;EntityPath=update-record-in-search-queue

    # MongoDB Local Host connection = uri: mongodb://localhost:27017
    # MongoDB On Atlas connection = uri: mongodb+srv://promitbabai:Mamonbabai-1@cluster0.lpcdyxy.mongodb.net/test
    # MongoDB on Azure CosmosDB = uri: mongodb://fse4-cosmos-mongo:DE2rgYXMFLHi1AzXmXPKyFJMgzXb2NqN3VQeHfoJn0tCVKzaa5uW7RZ962ujBZZBIdGFDWgzJCK1ACDbQ29c2Q==@fse4-cosmos-mongo.mongo.cosmos.azure.com:10255/?ssl=true&retrywrites=false&replicaSet=globaldb&maxIdleTimeMS=120000&appName=@fse4-cosmos-mongo@


 #AZURE COSMOSDB COnection String
  # spring.data.mongodb.database=fse4-cosmos-mongo
  # spring.data.mongodb.uri=mongodb://fse4-cosmos-mongo:DE2rgYXMFLHi1AzXmXPKyFJMgzXb2NqN3VQeHfoJn0tCVKzaa5uW7RZ962ujBZZBIdGFDWgzJCK1ACDbQ29c2Q==@fse4-cosmos-mongo.mongo.cosmos.azure.com:10255/?ssl=true&retrywrites=false&replicaSet=globaldb&maxIdleTimeMS=120000&appName=@fse4-cosmos-mongo@




# KAFKA Configutations
#  kafka:
#    topic:
#      name: skilltrackertopic
#    consumer:
#      group-id: skilltracker
#      bootstrap-servers: localhost:9092
#      auto-offset-reset: earliest
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


#      properties:
#        spring:
#          json:
#            trusted:
#              packages: *


# EUREKA Discovery Server Configutations
#eureka:
#  client:
#    instance:
#      hostname: localhost
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka
#    registerWithEureka: true
#    fetchRegistry: true
#  instance:
#    preferIpAddress: true


# Circuit Breaker Configutations - Resilience4j
resilience4j.circuitbreaker:
  instances:
    skilltrackermongo:
      registerHealthIndicator: true
      slidingWindowSize: 60
      slidingWindowType: TIME_BASED
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 10
      waitDurationInOpenState: 5s
      slowCallRateThreshold: 100
      slowCallDurationThreshold: 2000
      failureRateThreshold: 50

management:
  endpoint:
    health:
      show-details: always         #To show all details in /health endpoint.

  health:
    circuitbreakers:
      enabled: true #To show Circuit Breaker status

springdoc:
  api-docs:
    path: /skill-tracker-api

logging:
  level:
    root: INFO
  pattern:
    console: "%d %-5level %logger : %msg%n"
    file: "%d %-5level [%thread] %logger : %msg%n"

